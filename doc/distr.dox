/** \page dist Distribution
\date October 2013
\version 1.1

We've installed and configured a BALTRAD node, injected our own data into
it, exchanged data with other nodes, generated products with all the data,
and even created images for display. Now we want to distribute these
products. Here is where we see how.

The node comes equipped with a <em>Distribution route</em>, accessed
through the web-based user interface. You can use it to distribute data
and/or products using <b>local file copy</b>, \b FTP, or \b SCP.

Note that if you use SCP, then you will need valid public and
private keys generated by 
<a href="http://en.wikipedia.org/wiki/Ssh-keygen"
target="_blank">ssh-keygen</a> and exchanged with the machine that will
receive the distributed files. These keys are not part of the BALTRAD
system, they are required to use the safe protocol. There are several pages
on the web devoted to explaining how this works, e.g. 
<a href="https://help.ubuntu.com/community/SSH/OpenSSH/Keys"
target="_blank">this one</a> hosted by Ubuntu where you can learn how to
set this up.

We will give an example where we distribute the product we've configured
and generated in \ref pgf_comp to a remote computer using SCP. In the
web-based interface, go to "Processing" --> "Routes" --> "Create
distribution". The first four fields are easy to deal with, while the remaining
ones require some attention.

First the "Destination" field which can have one of three different URI formats:
\li copy:///dir/in/local/system
\li ftp://user:pass\@host/dir/
\li scp://user\@host/dir/

In the example below, we use FTP protocol for file distribution. Destination
URI looks like the following:

\verbatim
ftp://rainbow:s3cret@172.31.85.101/opt/baltrad/odimH5/rb5input/BOR
\endverbatim

The example URI using SCP would look like this:

\verbatim
scp://rainbow@172.31.85.101/opt/baltrad/odimH5/rb5input/BOR
\endverbatim

\note
Directories in the destination must exist, since upload handler doesn't creates 
target folders.
\endnote

Name template field supports naming the files. If this field is not empty, 
it will be used to generate the names of the uploaded files. \c ${} is used in 
the template to specify placeholders. The placeholder itself should be an 
ODIM_H5 metadata attribute provided with full path. Following is an example 
of a name template: 

\verbatim
${/_bdb/source_name}_${/what/object}_${/what/date}T${/what/time}Z.h5
\endverbatim

The template will produce the following file names:

\verbatim
ee_COMP_20120205T010000Z.h5
eehar_PVOL_20120205T010000Z.h5
eesur_PVOL_20120205T010000Z.h5
sease_SCAN_20120206T083200Z.h5
\endverbatim

Besides standard ODIM_H5 attributes, the following placeholder variables are 
triggered with a special prefix \c /_bdb:

\li /_bdb/uuid - entry uuid
\li /_bdb/source_name - name of the source in BDB
\li /_bdb/stored_date - UTC date this file was imported to BDB
\li /_bdb/stored_time - UTC time this file was imported to BDB

\note
Name template takes absolute paths (e.g /what/object).

If the name template is not specified, files will be named after the entry UUID.
\endnote

The "Filter" is a generic ODIM filtering tool that allows you to define 
selection criteria based on metadata attributes in ODIM files. In our case we 
have defined a fairly simple set of two criteria, the \c /what/source attribute 
must contain the geographic area name. A full set of idntifiers is used here 
in order to match files against filter: WMO, RAD, PLC and CMT. This ensures that 
in case id any of these identifiers match the file's attribute, the file will
be distributed.
The second selection criterion is that the \b /what/object attribute is PVOL, 
ie. a polar colume. This filtering functionality assumes you are conversant with 
<a href="http://www.knmi.nl/opera/opera3/OPERA_2008_03_WP2.1b_ODIM_H5_v2.1.pdf"
target="_blank">ODIM_H5</a> and its metadata.

\note
Filter takes relative attribute paths (e.g. what/object).
\endnote

\image html distr_route.png

*/
 
